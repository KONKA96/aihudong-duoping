<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.FacultyMapper" >
  <resultMap id="BaseResultMap" type="com.model.Faculty" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="faculty_name" property="facultyName" jdbcType="VARCHAR" />
    <result column="admin_id" property="adminId" jdbcType="INTEGER" />
    <result column="desc" property="desc" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, faculty_name, admin_id, `desc`
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from faculty
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from faculty
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.model.Faculty" >
    insert into faculty (id, faculty_name, admin_id, 
      desc)
    values (#{id,jdbcType=INTEGER}, #{facultyName,jdbcType=VARCHAR}, #{adminId,jdbcType=INTEGER}, 
      #{desc,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.model.Faculty" >
    insert into faculty
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="facultyName != null" >
        faculty_name,
      </if>
      <if test="adminId != null" >
        admin_id,
      </if>
      <if test="desc != null" >
        desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="facultyName != null" >
        #{facultyName,jdbcType=VARCHAR},
      </if>
      <if test="adminId != null" >
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="desc != null" >
        #{desc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.Faculty" >
    update faculty
    <set >
      <if test="facultyName != null" >
        faculty_name = #{facultyName,jdbcType=VARCHAR},
      </if>
      <if test="adminId != null" >
        admin_id = #{adminId,jdbcType=INTEGER},
      </if>
      <if test="desc != null" >
        desc = #{desc,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.Faculty" >
    update faculty
    set faculty_name = #{facultyName,jdbcType=VARCHAR},
      admin_id = #{adminId,jdbcType=INTEGER},
      desc = #{desc,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <resultMap type="Faculty" id="facultyMap" autoMapping="true">
  	<id column="f_id" property="id"/>
  	<collection property="subjectList" ofType="Subject" autoMapping="true">
  		<id column="s_id" property="id"/>
  	</collection>
  </resultMap>
  <select id="selectAll" parameterType="Faculty" resultMap="facultyMap">
  	select 
  		f.id f_id,f.faculty_name,f.admin_id,
  		s.id s_id,s.subject_name,s.faculty_id
  	from faculty f,subject s
  	where f.id=s.faculty_id
  		<if test="id!=null">
  			and f.id=#{id}
  		</if>
  		<if test="facultyName!=null and facultyName!=''">
  			and f.faculty_name like concat ('%',#{facultyName},'%')
  		</if>
  </select>
</mapper>