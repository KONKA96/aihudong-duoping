<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.ZoneMapper" >
  <resultMap id="BaseResultMap" type="com.model.Zone" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="zone_name" property="zoneName" jdbcType="VARCHAR" />
    <result column="desc" property="desc" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, zone_name, desc
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from zone
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from zone
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.model.Zone" >
    insert into zone (id, zone_name, desc
      )
    values (#{id,jdbcType=INTEGER}, #{zoneName,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.model.Zone" >
    insert into zone
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="zoneName != null" >
        zone_name,
      </if>
      <if test="desc != null" >
        desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="zoneName != null" >
        #{zoneName,jdbcType=VARCHAR},
      </if>
      <if test="desc != null" >
        #{desc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.Zone" >
    update zone
    <set >
      <if test="zoneName != null" >
        zone_name = #{zoneName,jdbcType=VARCHAR},
      </if>
      <if test="desc != null" >
        desc = #{desc,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.Zone" >
    update zone
    set zone_name = #{zoneName,jdbcType=VARCHAR},
      desc = #{desc,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <resultMap type="Zone" id="zoneMap" autoMapping="true">
  	<id column="z_id" property="id"/>
  	<result column="z_desc" property="desc"/>
  	<collection property="buildingList" ofType="Building" autoMapping="true">
  		<id column="b_id" property="id"/>
  		<collection property="roomList" ofType="Room" autoMapping="true">
  			<id column="r_id" property="id"/>
  			<result column="r_desc" property="desc"/>
  		</collection>
  	</collection>
  </resultMap>
  <sql id="zoneSql">
  	select z.id z_id,z.zone_name,z.desc z_desc,
  		b.id b_id,b.building_name,b.admin_id,b.zone_id,
  		r.id r_id,r.num,r.building_id,r.desc r_desc
  	from zone z left join building b on z.id=b.zone_id
  	left join room r on b.id=r.building_id
  	 
  </sql>
  <select id="selectAllZone" parameterType="Zone" resultMap="zoneMap">
  	<include refid="zoneSql"></include>
  	<if test="id!=null">
	  		and z.id=#{id}
	 </if>
  </select>
  <select id="selectAllRoomByBuilding" parameterType="Building" resultMap="zoneMap">
  	<include refid="zoneSql"></include>
  	<where>
	  	<if test="id!=null">
	  		and b.id=#{id}
	  	</if>
	  	<if test="buildingName!='' and buildingName!=null">
	  		and b.building_name =#{buildingName}
	  	</if>
  	</where>
  </select>
</mapper>