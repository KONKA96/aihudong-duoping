<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd ">

	<!-- 这是spring容器的配置文件 -->
	<!-- 1.自动扫描 -->
	<context:component-scan base-package="com.*">
		<!-- 不扫描带有controller注解的 -->
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 2.配置数据源 -->
	<!-- <bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:apiURL.properties</value>
			</list>
		</property>
	</bean> -->

	<!-- Druid JNDI DataSource for J2EE environments -->
	<bean id="dataSource"
		class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
		destroy-method="close">
		<property name="url" value="jdbc:mysql://localhost:3306/aihudong_duoping?useUnicode=true&amp;characterEncoding=utf-8" />
		<property name="username" value="aihudong_duoping" />
		<property name="password" value="WWW.123.com" />

		<property name="maxActive" value="20" />
		<property name="initialSize" value="1" />
		<property name="maxWait" value="60000" />
		<property name="minIdle" value="1" />

		<property name="timeBetweenEvictionRunsMillis" value="3000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x' FROM DUAL" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<!-- mysql 不支持 poolPreparedStatements -->
		<!--<property name="poolPreparedStatements" value="true" /> -->
		<!--<property name="maxPoolPreparedStatementPerConnectionSize" value="20" 
			/> -->

		<!-- 开启Druid的监控统计功能 -->
		<property name="filters" value="stat" />

	</bean>


	<!-- 3.整合mybatis -->
	<!-- 3.1 配置SqlSessionFactory -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 配置sqlSession所使用的数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 配置mybatis配置文件所在位置 -->
		<property name="configLocation"
			value="classpath:mybatis-config.xml" />
	</bean>

	<!-- 4.配置mapper文件和mapper接口的自动关联 -->
	<!-- 功能1:mapper文件不需要额外的配置（注册） 功能2:不需要写mapper接口的实现类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 配置mapper文件和对应接口所在的包路径 -->
		<property name="basePackage" value="com.dao" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<!-- 5.自动扫描配置文件 -->
	<!-- <bean id="propertyBean" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> 
		<property name="locations"> <array> <value>classpath:*.properties</value> 
		</array> </property> </bean> -->

	<context:property-placeholder
		location="classpath:*.properties" ignore-unresolvable="true" />

</beans>